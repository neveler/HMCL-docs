name: PR Preview
on:
  issue_comment:
    types: [created]
  pull_request_target:
    types: [labeled, closed]
concurrency:
  group: pr-preview
  cancel-in-progress: false
env:
  JEKYLL_ENV: production
  JEKYLL_CONFIG_URL: https://${{ github.repository_owner }}.github.io
  JEKYLL_CONFIG_BASEURL: /${{ github.event.repository.name }}/PR${{ github.event.issue.number }}
jobs:
  remove-preview:
    if: ${{ (github.event_name == 'pull_request_target' && (github.event.action == 'closed' || (github.event.action == 'labeled' && github.event.label.name == 'remove-preview'))) || (github.event_name == 'issue_comment' && github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER') && github.event.comment.body == '/remove-preview') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Update gh-pages
        run: |
          git clone --branch gh-pages --depth 1 https://github.com/${{ github.repository }}.git /home/runner/gh-pages || true
          rm -rf /home/runner/gh-pages/.git
          rm -rf /home/runner/gh-pages/PR${{ github.event.issue.number }}
          cd /home/runner/gh-pages
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b gh-pages
          echo "[$(date)]Remove Preview PR${{ github.event.issue.number }}" > README.md
          git add .
          git commit -m "[skip ci] update gh-pages" || echo "No changes to commit"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin gh-pages -f
      - name: Remove Label (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v8
        continue-on-error: true
        with:
          script: |
            github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: "remove-preview"
            })
      - name: Comment Message (issue_comment)
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              issue_number: context.issue.number,
              body: "Remove Preview URL: ${{ env.JEKYLL_CONFIG_URL }}${{ env.JEKYLL_CONFIG_BASEURL }}"
            })
      - name: Comment Message (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "Remove Preview URL: ${{ env.JEKYLL_CONFIG_URL }}${{ env.JEKYLL_CONFIG_BASEURL }}"
            })
  build:
    if: ${{ (github.event_name == 'pull_request_target' && github.event.action == 'labeled' && github.event.label.name == 'preview') || (github.event_name == 'issue_comment' && github.event.issue.pull_request && (github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'MEMBER') && github.event.comment.body == '/preview') }}
    runs-on: ubuntu-latest
    steps:
      - name: Fetch PR Info (issue_comment)
        id: fetch-pr-info
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/github-script@v8
        with:
          script: |
            const { data } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            core.setOutput('sha', data.head.sha);
            core.setOutput('repository', data.head.repo.full_name);
      - name: Checkout PR (issue_comment)
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.fetch-pr-info.outputs.sha }}
          repository: ${{ steps.fetch-pr-info.outputs.repository }}
          fetch-depth: 1
      - name: Checkout PR (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 1
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true
      - name: Jekyll Build
        run: |
          echo "url: ${{ env.JEKYLL_CONFIG_URL }}" > _action.yml
          echo "baseurl: ${{ env.JEKYLL_CONFIG_BASEURL }}" >> _action.yml
          echo "source: ${{ github.workspace }}" >> _action.yml
          echo "destination: /home/runner/site" >> _action.yml
          bundle exec jekyll build --config _config.yml,_action.yml
      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        with:
          name: site
          path: /home/runner/site
  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Clone gh-pages
        run: git clone --branch gh-pages --depth 1 https://github.com/${{ github.repository }} /home/runner/gh-pages
        continue-on-error: true
      - name: Prepare gh-pages
        run: |
          mkdir -p /home/runner/gh-pages
          rm -rf /home/runner/gh-pages/.git
          rm -rf /home/runner/gh-pages/PR${{ github.event.issue.number }}
      - name: Download site
        uses: actions/download-artifact@v5
        with:
          name: site
          path: /home/runner/
      - name: Merge gh-pages
        run: |
          mkdir -p /home/runner/gh-pages/PR${{ github.event.issue.number }}
          tar -xf /home/runner/artifact.tar -C /home/runner/gh-pages/PR${{ github.event.issue.number }}
      - name: Upload Pages
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: /home/runner/gh-pages
  upload:
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download gh-pages
        uses: actions/download-artifact@v5
        with:
          name: github-pages
          path: /home/runner/
      - name: Update gh-pages
        run: |
          mkdir -p /home/runner/gh-pages
          tar -xf /home/runner/artifact.tar -C /home/runner/gh-pages
          rm -rf /home/runner/gh-pages/.git
          cd /home/runner/gh-pages
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b gh-pages
          echo "[$(date)] Preview PR${{ github.event.issue.number }}" > README.md
          git add .
          git commit -m "[skip ci] update gh-pages" || echo "No changes to commit"
          git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin gh-pages -f
  deploy:
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      pull-requests: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Deploy Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
      - name: Comment Message (issue_comment)
        if: ${{ github.event_name == 'issue_comment' }}
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              issue_number: context.issue.number,
              body: "PR Preview URL: ${{ env.JEKYLL_CONFIG_URL }}${{ env.JEKYLL_CONFIG_BASEURL }}"
            })
      - name: Comment Message (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v8
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "PR Preview URL: ${{ env.JEKYLL_CONFIG_URL }}${{ env.JEKYLL_CONFIG_BASEURL }}"
            })
      - name: Remove Label (pull_request_target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v8
        continue-on-error: true
        with:
          script: |
            github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: "preview"
            })
